package org.ice.smart.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class ICESmartContract extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5061567e80620000216000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c80636db5130211610167578063bafca80c116100ce578063da3693c911610087578063da3693c9146106bf578063dc5fbbd7146106d2578063e31ed51b146106f2578063e46e8b4a14610705578063f3ea0a7314610718578063ffa0b9761461072b57600080fd5b8063bafca80c14610633578063c65ef56a14610653578063c8ae51c914610666578063cad29c2b14610679578063cdc5b7cd14610699578063d6483d17146106ac57600080fd5b806384d86ec31161012057806384d86ec3146105a15780638f28685f146105b45780639134293e146105da5780639ba8cf3b146105fa578063af6d1e391461060d578063b196fba01461062057600080fd5b80636db513021461051157806370509679146105245780637387616614610537578063788c32141461054a5780637acc0b201461056e578063826541dc1461058157600080fd5b806338cd8d631161020b5780634d42845c116101c45780634d42845c1461047857806355f1d4d91461048b5780635dd4f3421461049e5780635de5bee7146104b1578063602ffca7146104d15780636bc5245a146104f157600080fd5b806338cd8d63146103e957806339375200146104095780633f70c2b41461041c578063441ca54a1461042f578063443c227c14610442578063459e57881461046557600080fd5b8063175a7c3d1161025d578063175a7c3d146103375780632813d19d1461034a578063292b181c1461036b5780632e37eef61461039157806331d4a63b146103b657806334e2ad59146103c957600080fd5b8063045a08dd1461029a57806308970329146102c35780630cce816f146102e3578063141955021461030457806316496db414610317575b600080fd5b6102ad6102a8366004614ca5565b610733565b6040516102ba9190615301565b60405180910390f35b6102d66102d1366004614ca5565b6109e9565b6040516102ba9190615259565b6102f66102f1366004614ca5565b610c75565b6040519081526020016102ba565b6102f6610312366004614ca5565b610ce5565b61032a610325366004614ca5565b610d4e565b6040516102ba9190615421565b6102f6610345366004614ca5565b610f63565b61035d610358366004614ca5565b610fcc565b6040516102ba929190615434565b61037e610379366004614ca5565b611084565b6040516102ba979695949392919061544d565b6103a461039f366004614ca5565b6111e2565b6040516102ba96959493929190615518565b6102f66103c4366004614ca5565b61133a565b6103dc6103d7366004614ca5565b6113a3565b6040516102ba91906153a9565b6103fc6103f7366004614ca5565b6114ef565b6040516102ba91906153ce565b6102f6610417366004614ca5565b6116ed565b61032a61042a366004614ca5565b611756565b6102f661043d366004614ca5565b611802565b610455610450366004614ca5565b61186b565b6040516102ba949392919061549b565b6102d6610473366004614ca5565b6119b7565b610455610486366004614ca5565b611c43565b6102f6610499366004614e1e565b611c53565b6102f66104ac366004614d26565b611da0565b6104c46104bf366004614ca5565b611eec565b6040516102ba91906151b1565b6104e46104df366004614ca5565b6121ba565b6040516102ba91906153fb565b6105046104ff366004614ca5565b6123b3565b6040516102ba91906152ad565b6102f661051f366004614dab565b61265f565b6102f6610532366004614ca5565b61278a565b6103fc610545366004614ca5565b6127f3565b61055d610558366004614ca5565b612898565b6040516102ba9594939291906154d8565b61055d61057c366004614ca5565b6129ea565b61059461058f366004614ca5565b6129fa565b6040516102ba919061540e565b6102ad6105af366004614ca5565b612be9565b6105c76105c2366004614ca5565b612e95565b6040516102ba9796959493929190615562565b6105ed6105e8366004614ca5565b612ff3565b6040516102ba9190615205565b610504610608366004614ca5565b613289565b6102d661061b366004614ca5565b613535565b6102f661062e366004614ca5565b6137c1565b610646610641366004614ca5565b61382a565b6040516102ba91906153e8565b6102f6610661366004614cbd565b613a5b565b6102f6610674366004614ea3565b613b72565b61068c610687366004614ca5565b613cad565b6040516102ba9190615150565b6102f66106a7366004614ca5565b613f48565b6102f66106ba366004614c6b565b613fb1565b6105ed6106cd366004614ca5565b614090565b6106e56106e0366004614ca5565b614326565b6040516102ba9190615355565b6102f6610700366004614dab565b6145c1565b6102f6610713366004614cbd565b6146dd565b6102f6610726366004614ca5565b6147e9565b6104c4614852565b6060600061074083610ce5565b90506000816001600160401b0381111561076a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107cd57816020015b6107ba6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b8152602001906001900390816107885790505b5090506000805b6004548110156109df57856004828154811061080057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016004015414156109cd576004818154811061083957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201805461086c906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610898906155cc565b80156108e55780601f106108ba576101008083540402835291602001916108e5565b820191906000526020600020905b8154815290600101906020018083116108c857829003601f168201915b505050505081526020016002820180546108fe906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461092a906155cc565b80156109775780601f1061094c57610100808354040283529160200191610977565b820191906000526020600020905b81548152906001019060200180831161095a57829003601f168201915b50505050508152602001600382015481526020016004820154815250508383815181106109b457634e487b7160e01b600052603260045260246000fd5b60209081029190910101526109ca6001836155b4565b91505b806109d781615601565b9150506107d4565b5090949350505050565b606060006109f6836137c1565b90506000816001600160401b03811115610a2057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610a5957816020015b610a46614ad9565b815260200190600190039081610a3e5790505b5090506000805b6006548110156109df578560068281548110610a8c57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301541415610c635760068181548110610ac557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054610af8906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b24906155cc565b8015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b50505050508152602001600282018054610b8a906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb6906155cc565b8015610c035780601f10610bd857610100808354040283529160200191610c03565b820191906000526020600020905b815481529060010190602001808311610be657829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050838381518110610c4a57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610c606001836155b4565b91505b80610c6d81615601565b915050610a60565b600080805b600154811015610cde578360018281548110610ca657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600301541415610ccc57610cc96001836155b4565b91505b80610cd681615601565b915050610c7a565b5092915050565b600080805b600454811015610cde578360048281548110610d1657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401541415610d3c57610d396001836155b4565b91505b80610d4681615601565b915050610cea565b610d806040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b60005b600454811015610f5d578260048281548110610daf57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600001541415610f4b5760048181548110610de857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054610e1b906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610e47906155cc565b8015610e945780601f10610e6957610100808354040283529160200191610e94565b820191906000526020600020905b815481529060010190602001808311610e7757829003601f168201915b50505050508152602001600282018054610ead906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed9906155cc565b8015610f265780601f10610efb57610100808354040283529160200191610f26565b820191906000526020600020905b815481529060010190602001808311610f0957829003601f168201915b5050505050815260200160038201548152602001600482015481525050915050919050565b80610f5581615601565b915050610d83565b50919050565b600080805b600254811015610cde578360028281548110610f9457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600301541415610fba57610fb76001836155b4565b91505b80610fc481615601565b915050610f68565b60008181548110610fdc57600080fd5b60009182526020909120600290910201805460018201805491935090611001906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461102d906155cc565b801561107a5780601f1061104f5761010080835404028352916020019161107a565b820191906000526020600020905b81548152906001019060200180831161105d57829003601f168201915b5050505050905082565b6005818154811061109457600080fd5b600091825260209091206007909102018054600182018054919350906110b9906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546110e5906155cc565b80156111325780601f1061110757610100808354040283529160200191611132565b820191906000526020600020905b81548152906001019060200180831161111557829003601f168201915b505050505090806002015490806003015490806004018054611153906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461117f906155cc565b80156111cc5780601f106111a1576101008083540402835291602001916111cc565b820191906000526020600020905b8154815290600101906020018083116111af57829003601f168201915b5050505050908060050154908060060154905087565b600681815481106111f257600080fd5b60009182526020909120600690910201805460018201805491935090611217906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054611243906155cc565b80156112905780601f1061126557610100808354040283529160200191611290565b820191906000526020600020905b81548152906001019060200180831161127357829003601f168201915b5050505050908060020180546112a5906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546112d1906155cc565b801561131e5780601f106112f35761010080835404028352916020019161131e565b820191906000526020600020905b81548152906001019060200180831161130157829003601f168201915b5050505050908060030154908060040154908060050154905086565b600080805b600754811015610cde57836007828154811061136b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016006015414156113915761138e6001836155b4565b91505b8061139b81615601565b91505061133f565b60408051808201909152600081526060602082015260005b600054811015610f5d5782600082815481106113e757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016000015414156114dd576000818154811061142057634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160405180604001604052908160008201548152602001600182018054611453906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461147f906155cc565b80156114cc5780601f106114a1576101008083540402835291602001916114cc565b820191906000526020600020905b8154815290600101906020018083116114af57829003601f168201915b505050505081525050915050919050565b806114e781615601565b9150506113bb565b61151a6040518060800160405280600081526020016060815260200160608152602001600081525090565b60005b600254811015610f5d57826002828154811061154957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016000015414156116db576002818154811061158257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201604051806080016040529081600082015481526020016001820180546115b5906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546115e1906155cc565b801561162e5780601f106116035761010080835404028352916020019161162e565b820191906000526020600020905b81548152906001019060200180831161161157829003601f168201915b50505050508152602001600282018054611647906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054611673906155cc565b80156116c05780601f10611695576101008083540402835291602001916116c0565b820191906000526020600020905b8154815290600101906020018083116116a357829003601f168201915b50505050508152602001600382015481525050915050919050565b806116e581615601565b91505061151d565b600080805b600454811015610cde57836004828154811061171e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301541415611744576117416001836155b4565b91505b8061174e81615601565b9150506116f2565b6117886040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b60005b600354811015610f5d5782600382815481106117b757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016000015414156117f05760038181548110610de857634e487b7160e01b600052603260045260246000fd5b806117fa81615601565b91505061178b565b600080805b600754811015610cde57836007828154811061183357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060070201600501541415611859576118566001836155b4565b91505b8061186381615601565b915050611807565b6002818154811061187b57600080fd5b600091825260209091206004909102018054600182018054919350906118a0906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546118cc906155cc565b80156119195780601f106118ee57610100808354040283529160200191611919565b820191906000526020600020905b8154815290600101906020018083116118fc57829003601f168201915b50505050509080600201805461192e906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461195a906155cc565b80156119a75780601f1061197c576101008083540402835291602001916119a7565b820191906000526020600020905b81548152906001019060200180831161198a57829003601f168201915b5050505050908060030154905084565b606060006119c483613f48565b90506000816001600160401b038111156119ee57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a2757816020015b611a14614ad9565b815260200190600190039081611a0c5790505b5090506000805b6006548110156109df578560068281548110611a5a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600401541415611c315760068181548110611a9357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054611ac6906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054611af2906155cc565b8015611b3f5780601f10611b1457610100808354040283529160200191611b3f565b820191906000526020600020905b815481529060010190602001808311611b2257829003601f168201915b50505050508152602001600282018054611b58906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054611b84906155cc565b8015611bd15780601f10611ba657610100808354040283529160200191611bd1565b820191906000526020600020905b815481529060010190602001808311611bb457829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050838381518110611c1857634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611c2e6001836155b4565b91505b80611c3b81615601565b915050611a2e565b6001818154811061187b57600080fd5b6040805160e081018252600f5481526020808201878152928201869052606082018590526080820184905260a0820189905260c0820188905260078054600181018255600082815284517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68892909302918201928355945180519293611cff937fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68990930192910190614b0f565b5060408201518051611d1b916002840191602090910190614b0f565b50606082015160038201556080820151600482015560a0820151600582015560c090910151600690910155600f546040518181527f92d4eb36878e12e917551c271292979d935d4b52604a9146540691515a03966a9060200160405180910390a16001600f6000828254611d8f91906155b4565b909155509098975050505050505050565b6040805160e081018252600c5481526020808201878152928201869052606082018590526080820184905260a0820189905260c08201889052600580546001810182556000918252835160079091027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081019182559451805192959193611e4e937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db190930192910190614b0f565b50604082015160028201556060820151600382015560808201518051611e7e916004840191602090910190614b0f565b5060a0820151600582015560c090910151600690910155600c8054906001906000611ea983856155b4565b90915550506040518181527f595be16b3de9f5a5916023920f4618f5f5e303eba93784ef292e293beb7bd84d9060200160405180910390a1979650505050505050565b60606000611ef98361278a565b90506000816001600160401b03811115611f2357634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611f9457816020015b611f816040518060e00160405280600081526020016060815260200160008152602001600081526020016060815260200160008152602001600081525090565b815260200190600190039081611f415790505b5090506000805b6005548110156109df578560058281548110611fc757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016005015414156121a8576005818154811061200057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016040518060e001604052908160008201548152602001600182018054612033906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461205f906155cc565b80156120ac5780601f10612081576101008083540402835291602001916120ac565b820191906000526020600020905b81548152906001019060200180831161208f57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180546120d9906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612105906155cc565b80156121525780601f1061212757610100808354040283529160200191612152565b820191906000526020600020905b81548152906001019060200180831161213557829003601f168201915b505050505081526020016005820154815260200160068201548152505083838151811061218f57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526121a56001836155b4565b91505b806121b281615601565b915050611f9b565b6121c2614b93565b60005b600754811015610f5d5782600782815481106121f157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016000015414156123a1576007818154811061222a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016040518060e00160405290816000820154815260200160018201805461225d906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612289906155cc565b80156122d65780601f106122ab576101008083540402835291602001916122d6565b820191906000526020600020905b8154815290600101906020018083116122b957829003601f168201915b505050505081526020016002820180546122ef906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461231b906155cc565b80156123685780601f1061233d57610100808354040283529160200191612368565b820191906000526020600020905b81548152906001019060200180831161234b57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682015481525050915050919050565b806123ab81615601565b9150506121c5565b606060006123c083614a07565b90506000816001600160401b038111156123ea57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561244d57816020015b61243a6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b8152602001906001900390816124085790505b5090506000805b6003548110156109df57856003828154811061248057634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160040154141561264d57600381815481106124b957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820180546124ec906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612518906155cc565b80156125655780601f1061253a57610100808354040283529160200191612565565b820191906000526020600020905b81548152906001019060200180831161254857829003601f168201915b5050505050815260200160028201805461257e906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546125aa906155cc565b80156125f75780601f106125cc576101008083540402835291602001916125f7565b820191906000526020600020905b8154815290600101906020018083116125da57829003601f168201915b505050505081526020016003820154815260200160048201548152505083838151811061263457634e487b7160e01b600052603260045260246000fd5b602090810291909101015261264a6001836155b4565b91505b8061265781615601565b915050612454565b6040805160a081018252600d54815260208082018581529282018490526060820187905260808201869052600380546001810182556000918252835160059091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810191825594518051929591936126ff937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c90930192910190614b0f565b506040820151805161271b916002840191602090910190614b0f565b5060608201516003820155608090910151600490910155600d546040518181527f8bfed7c0004768df129b4900300816f8e85b8633621048ae882252021aa699b29060200160405180910390a16001600d600082825461277b91906155b4565b90915550909695505050505050565b600080805b600554811015610cde5783600582815481106127bb57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016005015414156127e1576127de6001836155b4565b91505b806127eb81615601565b91505061278f565b61281e6040518060800160405280600081526020016060815260200160608152602001600081525090565b60005b600154811015610f5d57826001828154811061284d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600001541415612886576001818154811061158257634e487b7160e01b600052603260045260246000fd5b8061289081615601565b915050612821565b600481815481106128a857600080fd5b600091825260209091206005909102018054600182018054919350906128cd906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546128f9906155cc565b80156129465780601f1061291b57610100808354040283529160200191612946565b820191906000526020600020905b81548152906001019060200180831161292957829003601f168201915b50505050509080600201805461295b906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612987906155cc565b80156129d45780601f106129a9576101008083540402835291602001916129d4565b820191906000526020600020905b8154815290600101906020018083116129b757829003601f168201915b5050505050908060030154908060040154905085565b600381815481106128a857600080fd5b612a02614ad9565b60005b600654811015610f5d578260068281548110612a3157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600001541415612bd75760068181548110612a6a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054612a9d906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612ac9906155cc565b8015612b165780601f10612aeb57610100808354040283529160200191612b16565b820191906000526020600020905b815481529060010190602001808311612af957829003601f168201915b50505050508152602001600282018054612b2f906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5b906155cc565b8015612ba85780601f10612b7d57610100808354040283529160200191612ba8565b820191906000526020600020905b815481529060010190602001808311612b8b57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050915050919050565b80612be181615601565b915050612a05565b60606000612bf6836116ed565b90506000816001600160401b03811115612c2057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612c8357816020015b612c706040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b815260200190600190039081612c3e5790505b5090506000805b6004548110156109df578560048281548110612cb657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301541415612e835760048181548110612cef57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054612d22906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612d4e906155cc565b8015612d9b5780601f10612d7057610100808354040283529160200191612d9b565b820191906000526020600020905b815481529060010190602001808311612d7e57829003601f168201915b50505050508152602001600282018054612db4906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612de0906155cc565b8015612e2d5780601f10612e0257610100808354040283529160200191612e2d565b820191906000526020600020905b815481529060010190602001808311612e1057829003601f168201915b5050505050815260200160038201548152602001600482015481525050838381518110612e6a57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152612e806001836155b4565b91505b80612e8d81615601565b915050612c8a565b60078181548110612ea557600080fd5b60009182526020909120600790910201805460018201805491935090612eca906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612ef6906155cc565b8015612f435780601f10612f1857610100808354040283529160200191612f43565b820191906000526020600020905b815481529060010190602001808311612f2657829003601f168201915b505050505090806002018054612f58906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054612f84906155cc565b8015612fd15780601f10612fa657610100808354040283529160200191612fd1565b820191906000526020600020905b815481529060010190602001808311612fb457829003601f168201915b5050505050908060030154908060040154908060050154908060060154905087565b606060006130008361133a565b90506000816001600160401b0381111561302a57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561306357816020015b613050614b93565b8152602001906001900390816130485790505b5090506000805b6007548110156109df57856007828154811061309657634e487b7160e01b600052603260045260246000fd5b906000526020600020906007020160060154141561327757600781815481106130cf57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016040518060e001604052908160008201548152602001600182018054613102906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461312e906155cc565b801561317b5780601f106131505761010080835404028352916020019161317b565b820191906000526020600020905b81548152906001019060200180831161315e57829003601f168201915b50505050508152602001600282018054613194906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546131c0906155cc565b801561320d5780601f106131e25761010080835404028352916020019161320d565b820191906000526020600020905b8154815290600101906020018083116131f057829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201548152505083838151811061325e57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526132746001836155b4565b91505b8061328181615601565b91505061306a565b6060600061329683614a70565b90506000816001600160401b038111156132c057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561332357816020015b6133106040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b8152602001906001900390816132de5790505b5090506000805b6003548110156109df57856003828154811061335657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301541415613523576003818154811061338f57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820180546133c2906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546133ee906155cc565b801561343b5780601f106134105761010080835404028352916020019161343b565b820191906000526020600020905b81548152906001019060200180831161341e57829003601f168201915b50505050508152602001600282018054613454906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054613480906155cc565b80156134cd5780601f106134a2576101008083540402835291602001916134cd565b820191906000526020600020905b8154815290600101906020018083116134b057829003601f168201915b505050505081526020016003820154815260200160048201548152505083838151811061350a57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526135206001836155b4565b91505b8061352d81615601565b91505061332a565b60606000613542836147e9565b90506000816001600160401b0381111561356c57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156135a557816020015b613592614ad9565b81526020019060019003908161358a5790505b5090506000805b6006548110156109df5785600682815481106135d857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016005015414156137af576006818154811061361157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054613644906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054613670906155cc565b80156136bd5780601f10613692576101008083540402835291602001916136bd565b820191906000526020600020905b8154815290600101906020018083116136a057829003601f168201915b505050505081526020016002820180546136d6906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054613702906155cc565b801561374f5780601f106137245761010080835404028352916020019161374f565b820191906000526020600020905b81548152906001019060200180831161373257829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505083838151811061379657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526137ac6001836155b4565b91505b806137b981615601565b9150506135ac565b600080805b600654811015610cde5783600682815481106137f257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301541415613818576138156001836155b4565b91505b8061382281615601565b9150506137c6565b61386a6040518060e00160405280600081526020016060815260200160008152602001600081526020016060815260200160008152602001600081525090565b60005b600554811015610f5d57826005828154811061389957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060070201600001541415613a4957600581815481106138d257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016040518060e001604052908160008201548152602001600182018054613905906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054613931906155cc565b801561397e5780601f106139535761010080835404028352916020019161397e565b820191906000526020600020905b81548152906001019060200180831161396157829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180546139ab906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546139d7906155cc565b8015613a245780601f106139f957610100808354040283529160200191613a24565b820191906000526020600020905b815481529060010190602001808311613a0757829003601f168201915b5050505050815260200160058201548152602001600682015481525050915050919050565b80613a5381615601565b91505061386d565b6040805160808101825260095481526020808201858152928201849052606082018690526001805480820182556000918252835160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019182559451805192959193613af3937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790930192910190614b0f565b5060408201518051613b0f916002840191602090910190614b0f565b506060919091015160039091015560098054906001906000613b3183856155b4565b90915550506040518181527f101b8ce2e1b11f01152c70ce8aaf6c82e8a3af259115d7032b0be0806ba1947b906020015b60405180910390a1949350505050565b6040805160c081018252600e5481526020808201858152928201849052606082018890526080820187905260a0820186905260068054600181018255600082815284517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f92909302918201928355945180519293613c17937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090930192910190614b0f565b5060408201518051613c33916002840191602090910190614b0f565b50606082015160038201556080820151600482015560a090910151600590910155600e546040518181527f7e7350040e5c9d9d9c606a903992ccf66dda4dac7016a5cec61aa00ff426f4299060200160405180910390a16001600e6000828254613c9d91906155b4565b9091555090979650505050505050565b60606000613cba83610c75565b90506000816001600160401b03811115613ce457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015613d4057816020015b613d2d6040518060800160405280600081526020016060815260200160608152602001600081525090565b815260200190600190039081613d025790505b5090506000805b6001548110156109df578560018281548110613d7357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600301541415613f365760018181548110613dac57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160405180608001604052908160008201548152602001600182018054613ddf906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054613e0b906155cc565b8015613e585780601f10613e2d57610100808354040283529160200191613e58565b820191906000526020600020905b815481529060010190602001808311613e3b57829003601f168201915b50505050508152602001600282018054613e71906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054613e9d906155cc565b8015613eea5780601f10613ebf57610100808354040283529160200191613eea565b820191906000526020600020905b815481529060010190602001808311613ecd57829003601f168201915b50505050508152602001600382015481525050838381518110613f1d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152613f336001836155b4565b91505b80613f4081615601565b915050613d47565b600080805b600654811015610cde578360068281548110613f7957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600401541415613f9f57613f9c6001836155b4565b91505b80613fa981615601565b915050613f4d565b60408051808201909152600854815260208082018381526000805460018101825581805284517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360029092029182019081559251805192959461403b937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56490930192910190614b0f565b5050600880549150600190600061405283856155b4565b90915550506040518181527f3eceb206415c0f0ca5dea3a04907e46fd723980f3a114f7805c45e5e5e204f939060200160405180910390a192915050565b6060600061409d83611802565b90506000816001600160401b038111156140c757634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561410057816020015b6140ed614b93565b8152602001906001900390816140e55790505b5090506000805b6007548110156109df57856007828154811061413357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060070201600501541415614314576007818154811061416c57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702016040518060e00160405290816000820154815260200160018201805461419f906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546141cb906155cc565b80156142185780601f106141ed57610100808354040283529160200191614218565b820191906000526020600020905b8154815290600101906020018083116141fb57829003601f168201915b50505050508152602001600282018054614231906155cc565b80601f016020809104026020016040519081016040528092919081815260200182805461425d906155cc565b80156142aa5780601f1061427f576101008083540402835291602001916142aa565b820191906000526020600020905b81548152906001019060200180831161428d57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815250508383815181106142fb57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526143116001836155b4565b91505b8061431e81615601565b915050614107565b6060600061433383610f63565b90506000816001600160401b0381111561435d57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156143b957816020015b6143a66040518060800160405280600081526020016060815260200160608152602001600081525090565b81526020019060019003908161437b5790505b5090506000805b6002548110156109df5785600282815481106143ec57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016003015414156145af576002818154811061442557634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160405180608001604052908160008201548152602001600182018054614458906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054614484906155cc565b80156144d15780601f106144a6576101008083540402835291602001916144d1565b820191906000526020600020905b8154815290600101906020018083116144b457829003601f168201915b505050505081526020016002820180546144ea906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054614516906155cc565b80156145635780601f1061453857610100808354040283529160200191614563565b820191906000526020600020905b81548152906001019060200180831161454657829003601f168201915b5050505050815260200160038201548152505083838151811061459657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526145ac6001836155b4565b91505b806145b981615601565b9150506143c0565b6040805160a081018252600b54815260208082018581529282018490526060820187905260808201869052600480546001810182556000918252835160059091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b81019182559451805192959193614661937f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90930192910190614b0f565b506040820151805161467d916002840191602090910190614b0f565b5060608201516003820155608090910151600490910155600b546040518181527fb8bdae7750b8aee9fe44da21d9ef2a5348edc16036798e108324d272ae96c22c9060200160405180910390a16001600b600082825461277b91906155b4565b60408051608081018252600a548152602080820185815292820184905260608201869052600280546001810182556000918252835160049091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace81019182559451805192959193614776937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf90930192910190614b0f565b5060408201518051614792916002840191602090910190614b0f565b5060609190910151600390910155600a80549060019060006147b483856155b4565b90915550506040518181527f60d43d1d111ceefb7b9db2a3777616a53a6acf0d0a1a31a97959f4f36ee7b1e190602001613b62565b600080805b600654811015610cde57836006828154811061481a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016005015414156148405761483d6001836155b4565b91505b8061484a81615601565b9150506147ee565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156149fe57838290600052602060002090600702016040518060e0016040529081600082015481526020016001820180546148b3906155cc565b80601f01602080910402602001604051908101604052809291908181526020018280546148df906155cc565b801561492c5780601f106149015761010080835404028352916020019161492c565b820191906000526020600020905b81548152906001019060200180831161490f57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482018054614959906155cc565b80601f0160208091040260200160405190810160405280929190818152602001828054614985906155cc565b80156149d25780601f106149a7576101008083540402835291602001916149d2565b820191906000526020600020905b8154815290600101906020018083116149b557829003601f168201915b505050505081526020016005820154815260200160068201548152505081526020019060010190614876565b50505050905090565b600080805b600354811015610cde578360038281548110614a3857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401541415614a5e57614a5b6001836155b4565b91505b80614a6881615601565b915050614a0c565b600080805b600354811015610cde578360038281548110614aa157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600301541415614ac757614ac46001836155b4565b91505b80614ad181615601565b915050614a75565b6040518060c001604052806000815260200160608152602001606081526020016000815260200160008152602001600081525090565b828054614b1b906155cc565b90600052602060002090601f016020900481019282614b3d5760008555614b83565b82601f10614b5657805160ff1916838001178555614b83565b82800160010185558215614b83579182015b82811115614b83578251825591602001919060010190614b68565b50614b8f929150614bd0565b5090565b6040518060e00160405280600081526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b5b80821115614b8f5760008155600101614bd1565b600082601f830112614bf5578081fd5b81356001600160401b0380821115614c0f57614c0f615632565b604051601f8301601f19908116603f01168101908282118183101715614c3757614c37615632565b81604052838152866020858801011115614c4f578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215614c7c578081fd5b81356001600160401b03811115614c91578182fd5b614c9d84828501614be5565b949350505050565b600060208284031215614cb6578081fd5b5035919050565b600080600060608486031215614cd1578182fd5b8335925060208401356001600160401b0380821115614cee578384fd5b614cfa87838801614be5565b93506040860135915080821115614d0f578283fd5b50614d1c86828701614be5565b9150509250925092565b60008060008060008060c08789031215614d3e578182fd5b863595506020870135945060408701356001600160401b0380821115614d62578384fd5b614d6e8a838b01614be5565b9550606089013594506080890135935060a0890135915080821115614d91578283fd5b50614d9e89828a01614be5565b9150509295509295509295565b60008060008060808587031215614dc0578384fd5b843593506020850135925060408501356001600160401b0380821115614de4578384fd5b614df088838901614be5565b93506060870135915080821115614e05578283fd5b50614e1287828801614be5565b91505092959194509250565b60008060008060008060c08789031215614e36578182fd5b863595506020870135945060408701356001600160401b0380821115614e5a578384fd5b614e668a838b01614be5565b95506060890135915080821115614e7b578384fd5b50614e8889828a01614be5565b9350506080870135915060a087013590509295509295509295565b600080600080600060a08688031215614eba578081fd5b85359450602086013593506040860135925060608601356001600160401b0380821115614ee5578283fd5b614ef189838a01614be5565b93506080880135915080821115614f06578283fd5b50614f1388828901614be5565b9150509295509295909350565b60008151808452815b81811015614f4557602081850181015186830182015201614f29565b81811115614f565782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160806020850152614f8a6080850182614f20565b905060408301518482036040860152614fa38282614f20565b915050606083015160608501528091505092915050565b805182526000602082015160e06020850152614fd960e0850182614f20565b90506040830151604085015260608301516060850152608083015184820360808601526150068282614f20565b91505060a083015160a085015260c083015160c08501528091505092915050565b805182526000602082015160e0602085015261504660e0850182614f20565b90506040830151848203604086015261505f8282614f20565b915050606083015160608501526080830151608085015260a083015160a085015260c083015160c08501528091505092915050565b805182526000602082015160c060208501526150b360c0850182614f20565b9050604083015184820360408601526150cc8282614f20565b915050606083015160608501526080830151608085015260a083015160a08501528091505092915050565b805182526000602082015160a0602085015261511660a0850182614f20565b90506040830151848203604086015261512f8282614f20565b91505060608301516060850152608083015160808501528091505092915050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f19888603018452615192858351614f6b565b94509285019290850190600101615176565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f198886030184526151f3858351614fba565b945092850192908501906001016151d7565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f19888603018452615247858351615027565b9450928501929085019060010161522b565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f1988860301845261529b858351615094565b9450928501929085019060010161527f565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f198886030184526152ef8583516150f7565b945092850192908501906001016152d3565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f198886030184526153438583516150f7565b94509285019290850190600101615327565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156151a457603f19888603018452615397858351614f6b565b9450928501929085019060010161537b565b602081528151602082015260006020830151604080840152614c9d6060840182614f20565b6020815260006153e16020830184614f6b565b9392505050565b6020815260006153e16020830184614fba565b6020815260006153e16020830184615027565b6020815260006153e16020830184615094565b6020815260006153e160208301846150f7565b828152604060208201526000614c9d6040830184614f20565b87815260e06020820152600061546660e0830189614f20565b87604084015286606084015282810360808401526154848187614f20565b60a0840195909552505060c0015295945050505050565b8481526080602082015260006154b46080830186614f20565b82810360408401526154c68186614f20565b91505082606083015295945050505050565b85815260a0602082015260006154f160a0830187614f20565b82810360408401526155038187614f20565b60608401959095525050608001529392505050565b86815260c06020820152600061553160c0830188614f20565b82810360408401526155438188614f20565b60608401969096525050608081019290925260a0909101529392505050565b87815260e06020820152600061557b60e0830189614f20565b828103604084015261558d8189614f20565b9150508560608301528460808301528360a08301528260c083015298975050505050505050565b600082198211156155c7576155c761561c565b500190565b600181811c908216806155e057607f821691505b60208210811415610f5d57634e487b7160e01b600052602260045260246000fd5b60006000198214156156155761561561561c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122094d1465ea3d8a4454288e67bca0f4aa5f2c433dac81fed045a45202dd990d70d64736f6c63430008040033";

    public static final String FUNC_ADDCOMPANY = "addCompany";

    public static final String FUNC_ADDMACHINE = "addMachine";

    public static final String FUNC_ADDMEASURE = "addMeasure";

    public static final String FUNC_ADDMEASURECONSTRAINT = "addMeasureConstraint";

    public static final String FUNC_ADDPHASE = "addPhase";

    public static final String FUNC_ADDPRODUCT = "addProduct";

    public static final String FUNC_ADDRECIPE = "addRecipe";

    public static final String FUNC_ADDRECIPESTEP = "addRecipeStep";

    public static final String FUNC_COMPANIES = "companies";

    public static final String FUNC_GETCOMPANYBYID = "getCompanyById";

    public static final String FUNC_GETMACHINEBYID = "getMachineById";

    public static final String FUNC_GETMACHINESBYCOMPANYID = "getMachinesByCompanyId";

    public static final String FUNC_GETMEASUREBYID = "getMeasureById";

    public static final String FUNC_GETMEASURECONSTRAINTBYID = "getMeasureConstraintById";

    public static final String FUNC_GETMEASURECONSTRAINTS = "getMeasureConstraints";

    public static final String FUNC_GETMEASURECONSTRAINTSBYRECIPESTEPID = "getMeasureConstraintsByRecipeStepId";

    public static final String FUNC_GETMEASURESBYMEASURECONSTRAINTID = "getMeasuresByMeasureConstraintId";

    public static final String FUNC_GETMEASURESBYPHASEID = "getMeasuresByPhaseId";

    public static final String FUNC_GETNUMOFMACHINESBYCOMPANYID = "getNumOfMachinesByCompanyId";

    public static final String FUNC_GETNUMOFMEASURECONSTRAINTBYRECIPESTEPID = "getNumOfMeasureConstraintByRecipeStepId";

    public static final String FUNC_GETNUMOFMEASURECONSTRAINTSBYMEASURECONSTRAINTID = "getNumOfMeasureConstraintsByMeasureConstraintId";

    public static final String FUNC_GETNUMOFMEASURESBYPHASEID = "getNumOfMeasuresByPhaseId";

    public static final String FUNC_GETNUMOFPHASESBYMACHINEID = "getNumOfPhasesByMachineId";

    public static final String FUNC_GETNUMOFPHASESBYPRODUCTID = "getNumOfPhasesByProductId";

    public static final String FUNC_GETNUMOFPHASESBYRECIPESTEPID = "getNumOfPhasesByRecipeStepId";

    public static final String FUNC_GETNUMOFRECIPESTEPSBYMACHINEID = "getNumOfRecipeStepsByMachineId";

    public static final String FUNC_GETNUMOFRECIPESTEPSBYRECIPEID = "getNumOfRecipeStepsByRecipeId";

    public static final String FUNC_GETNUMOFRECIPESBYCOMPANYID = "getNumOfRecipesByCompanyId";

    public static final String FUNC_GETPHASEBYID = "getPhaseById";

    public static final String FUNC_GETPHASESBYMACHINEID = "getPhasesByMachineId";

    public static final String FUNC_GETPHASESBYPRODUCTID = "getPhasesByProductId";

    public static final String FUNC_GETPHASESBYRECIPESTEPID = "getPhasesByRecipeStepId";

    public static final String FUNC_GETPRODUCTBYID = "getProductById";

    public static final String FUNC_GETPRODUCTSBYCOMPANYID = "getProductsByCompanyId";

    public static final String FUNC_GETPRODUCTSBYRECIPYID = "getProductsByRecipyId";

    public static final String FUNC_GETRECIPESTEPBYID = "getRecipeStepbyId";

    public static final String FUNC_GETRECIPESTEPSBYMACHINEID = "getRecipeStepsByMachineId";

    public static final String FUNC_GETRECIPESTEPSBYRECIPEID = "getRecipeStepsByRecipeId";

    public static final String FUNC_GETRECIPEBYID = "getRecipebyId";

    public static final String FUNC_GETRECIPESBYCOMPANYID = "getRecipesByCompanyId";

    public static final String FUNC_MACHINES = "machines";

    public static final String FUNC_MEASURECONSTRAINTS = "measureConstraints";

    public static final String FUNC_MEASURES = "measures";

    public static final String FUNC_PHASES = "phases";

    public static final String FUNC_PRODUCTS = "products";

    public static final String FUNC_RECIPESTEPS = "recipeSteps";

    public static final String FUNC_RECIPES = "recipes";

    public static final Event COMPANYCREATED_EVENT = new Event("CompanyCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MACHINECREATED_EVENT = new Event("MachineCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MEASURECONSTRAINTCREATED_EVENT = new Event("MeasureConstraintCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MEASURECREATED_EVENT = new Event("MeasureCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PHASECREATED_EVENT = new Event("PhaseCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PRODUCTCREATED_EVENT = new Event("ProductCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RECIPECREATED_EVENT = new Event("RecipeCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RECIPESTEPCREATED_EVENT = new Event("RecipeStepCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected ICESmartContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ICESmartContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ICESmartContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ICESmartContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<CompanyCreatedEventResponse> getCompanyCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(COMPANYCREATED_EVENT, transactionReceipt);
        ArrayList<CompanyCreatedEventResponse> responses = new ArrayList<CompanyCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CompanyCreatedEventResponse typedResponse = new CompanyCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CompanyCreatedEventResponse> companyCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CompanyCreatedEventResponse>() {
            @Override
            public CompanyCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(COMPANYCREATED_EVENT, log);
                CompanyCreatedEventResponse typedResponse = new CompanyCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CompanyCreatedEventResponse> companyCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(COMPANYCREATED_EVENT));
        return companyCreatedEventFlowable(filter);
    }

    public List<MachineCreatedEventResponse> getMachineCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MACHINECREATED_EVENT, transactionReceipt);
        ArrayList<MachineCreatedEventResponse> responses = new ArrayList<MachineCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MachineCreatedEventResponse typedResponse = new MachineCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MachineCreatedEventResponse> machineCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MachineCreatedEventResponse>() {
            @Override
            public MachineCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MACHINECREATED_EVENT, log);
                MachineCreatedEventResponse typedResponse = new MachineCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MachineCreatedEventResponse> machineCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MACHINECREATED_EVENT));
        return machineCreatedEventFlowable(filter);
    }

    public List<MeasureConstraintCreatedEventResponse> getMeasureConstraintCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MEASURECONSTRAINTCREATED_EVENT, transactionReceipt);
        ArrayList<MeasureConstraintCreatedEventResponse> responses = new ArrayList<MeasureConstraintCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MeasureConstraintCreatedEventResponse typedResponse = new MeasureConstraintCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MeasureConstraintCreatedEventResponse> measureConstraintCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MeasureConstraintCreatedEventResponse>() {
            @Override
            public MeasureConstraintCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MEASURECONSTRAINTCREATED_EVENT, log);
                MeasureConstraintCreatedEventResponse typedResponse = new MeasureConstraintCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MeasureConstraintCreatedEventResponse> measureConstraintCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MEASURECONSTRAINTCREATED_EVENT));
        return measureConstraintCreatedEventFlowable(filter);
    }

    public List<MeasureCreatedEventResponse> getMeasureCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MEASURECREATED_EVENT, transactionReceipt);
        ArrayList<MeasureCreatedEventResponse> responses = new ArrayList<MeasureCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MeasureCreatedEventResponse typedResponse = new MeasureCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MeasureCreatedEventResponse> measureCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MeasureCreatedEventResponse>() {
            @Override
            public MeasureCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MEASURECREATED_EVENT, log);
                MeasureCreatedEventResponse typedResponse = new MeasureCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MeasureCreatedEventResponse> measureCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MEASURECREATED_EVENT));
        return measureCreatedEventFlowable(filter);
    }

    public List<PhaseCreatedEventResponse> getPhaseCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PHASECREATED_EVENT, transactionReceipt);
        ArrayList<PhaseCreatedEventResponse> responses = new ArrayList<PhaseCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PhaseCreatedEventResponse typedResponse = new PhaseCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PhaseCreatedEventResponse> phaseCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PhaseCreatedEventResponse>() {
            @Override
            public PhaseCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PHASECREATED_EVENT, log);
                PhaseCreatedEventResponse typedResponse = new PhaseCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PhaseCreatedEventResponse> phaseCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PHASECREATED_EVENT));
        return phaseCreatedEventFlowable(filter);
    }

    public List<ProductCreatedEventResponse> getProductCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PRODUCTCREATED_EVENT, transactionReceipt);
        ArrayList<ProductCreatedEventResponse> responses = new ArrayList<ProductCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProductCreatedEventResponse typedResponse = new ProductCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProductCreatedEventResponse> productCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProductCreatedEventResponse>() {
            @Override
            public ProductCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PRODUCTCREATED_EVENT, log);
                ProductCreatedEventResponse typedResponse = new ProductCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProductCreatedEventResponse> productCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PRODUCTCREATED_EVENT));
        return productCreatedEventFlowable(filter);
    }

    public List<RecipeCreatedEventResponse> getRecipeCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECIPECREATED_EVENT, transactionReceipt);
        ArrayList<RecipeCreatedEventResponse> responses = new ArrayList<RecipeCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RecipeCreatedEventResponse typedResponse = new RecipeCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RecipeCreatedEventResponse> recipeCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RecipeCreatedEventResponse>() {
            @Override
            public RecipeCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECIPECREATED_EVENT, log);
                RecipeCreatedEventResponse typedResponse = new RecipeCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RecipeCreatedEventResponse> recipeCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECIPECREATED_EVENT));
        return recipeCreatedEventFlowable(filter);
    }

    public List<RecipeStepCreatedEventResponse> getRecipeStepCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECIPESTEPCREATED_EVENT, transactionReceipt);
        ArrayList<RecipeStepCreatedEventResponse> responses = new ArrayList<RecipeStepCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RecipeStepCreatedEventResponse typedResponse = new RecipeStepCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RecipeStepCreatedEventResponse> recipeStepCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RecipeStepCreatedEventResponse>() {
            @Override
            public RecipeStepCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECIPESTEPCREATED_EVENT, log);
                RecipeStepCreatedEventResponse typedResponse = new RecipeStepCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RecipeStepCreatedEventResponse> recipeStepCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECIPESTEPCREATED_EVENT));
        return recipeStepCreatedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addCompany(String name) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDCOMPANY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMachine(BigInteger companyId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMACHINE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMeasure(BigInteger phaseId, BigInteger measureConstraintId, String name, String unitOfMeasure, BigInteger measureStartTime, BigInteger measureEndTime) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEASURE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId), 
                new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(unitOfMeasure), 
                new org.web3j.abi.datatypes.generated.Uint256(measureStartTime), 
                new org.web3j.abi.datatypes.generated.Uint256(measureEndTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMeasureConstraint(BigInteger recipeStepId, BigInteger machineId, String name, BigInteger maxMeasure, BigInteger minMeasure, String unitOfMeasure) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEASURECONSTRAINT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId), 
                new org.web3j.abi.datatypes.generated.Uint256(machineId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.generated.Int256(maxMeasure), 
                new org.web3j.abi.datatypes.generated.Int256(minMeasure), 
                new org.web3j.abi.datatypes.Utf8String(unitOfMeasure)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addPhase(BigInteger productId, BigInteger machineId, BigInteger recipeStepId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDPHASE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId), 
                new org.web3j.abi.datatypes.generated.Uint256(machineId), 
                new org.web3j.abi.datatypes.generated.Uint256(recipeStepId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addProduct(BigInteger companyId, BigInteger recipyId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDPRODUCT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId), 
                new org.web3j.abi.datatypes.generated.Uint256(recipyId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRecipe(BigInteger companyId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDRECIPE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRecipeStep(BigInteger recipeId, BigInteger machineId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDRECIPESTEP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId), 
                new org.web3j.abi.datatypes.generated.Uint256(machineId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple2<BigInteger, String>> companies(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_COMPANIES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple2<BigInteger, String>>(function,
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Company> getCompanyById(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMPANYBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Company>() {}));
        return executeRemoteCallSingleValueReturn(function, Company.class);
    }

    public RemoteFunctionCall<Machine> getMachineById(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMACHINEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Machine>() {}));
        return executeRemoteCallSingleValueReturn(function, Machine.class);
    }

    public RemoteFunctionCall<List> getMachinesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMACHINESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Machine>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Measure> getMeasureById(BigInteger measureId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASUREBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Measure>() {}));
        return executeRemoteCallSingleValueReturn(function, Measure.class);
    }

    public RemoteFunctionCall<MeasureConstraint> getMeasureConstraintById(BigInteger measureConstraintId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURECONSTRAINTBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<MeasureConstraint>() {}));
        return executeRemoteCallSingleValueReturn(function, MeasureConstraint.class);
    }

    public RemoteFunctionCall<List> getMeasureConstraints() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURECONSTRAINTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<MeasureConstraint>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMeasureConstraintsByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURECONSTRAINTSBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<MeasureConstraint>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMeasuresByMeasureConstraintId(BigInteger measureConstraintId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURESBYMEASURECONSTRAINTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Measure>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMeasuresByPhaseId(BigInteger phaseId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURESBYPHASEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Measure>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getNumOfMachinesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMACHINESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfMeasureConstraintByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMEASURECONSTRAINTBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfMeasureConstraintsByMeasureConstraintId(BigInteger measureConstraintId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMEASURECONSTRAINTSBYMEASURECONSTRAINTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfMeasuresByPhaseId(BigInteger phaseId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMEASURESBYPHASEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfPhasesByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFPHASESBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfPhasesByProductId(BigInteger productId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFPHASESBYPRODUCTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfPhasesByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFPHASESBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfRecipeStepsByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFRECIPESTEPSBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfRecipeStepsByRecipeId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFRECIPESTEPSBYRECIPEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfRecipesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFRECIPESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Phase> getPhaseById(BigInteger phaseId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Phase>() {}));
        return executeRemoteCallSingleValueReturn(function, Phase.class);
    }

    public RemoteFunctionCall<List> getPhasesByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASESBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Phase>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getPhasesByProductId(BigInteger productId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASESBYPRODUCTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Phase>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getPhasesByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASESBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Phase>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Product> getProductById(BigInteger productId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRODUCTBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Product>() {}));
        return executeRemoteCallSingleValueReturn(function, Product.class);
    }

    public RemoteFunctionCall<List> getProductsByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRODUCTSBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Product>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getProductsByRecipyId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRODUCTSBYRECIPYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Product>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<RecipeStep> getRecipeStepbyId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESTEPBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<RecipeStep>() {}));
        return executeRemoteCallSingleValueReturn(function, RecipeStep.class);
    }

    public RemoteFunctionCall<List> getRecipeStepsByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESTEPSBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<RecipeStep>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getRecipeStepsByRecipeId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESTEPSBYRECIPEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<RecipeStep>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Recipe> getRecipebyId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Recipe>() {}));
        return executeRemoteCallSingleValueReturn(function, Recipe.class);
    }

    public RemoteFunctionCall<List> getRecipesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Recipe>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>> machines(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MACHINES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>>(function,
                new Callable<Tuple4<BigInteger, String, String, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>> measureConstraints(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MEASURECONSTRAINTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple7<BigInteger, String, String, BigInteger, BigInteger, BigInteger, BigInteger>> measures(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MEASURES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple7<BigInteger, String, String, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple7<BigInteger, String, String, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple7<BigInteger, String, String, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<BigInteger, String, String, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>> phases(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PHASES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>> products(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PRODUCTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<BigInteger, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, String, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>> recipeSteps(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RECIPESTEPS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<BigInteger, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, String, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>> recipes(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RECIPES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>>(function,
                new Callable<Tuple4<BigInteger, String, String, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    @Deprecated
    public static ICESmartContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ICESmartContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ICESmartContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ICESmartContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ICESmartContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ICESmartContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ICESmartContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ICESmartContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ICESmartContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ICESmartContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ICESmartContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ICESmartContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Company extends DynamicStruct {
        public BigInteger id;

        public String name;

        public Company(BigInteger id, String name) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name));
            this.id = id;
            this.name = name;
        }

        public Company(Uint256 id, Utf8String name) {
            super(id,name);
            this.id = id.getValue();
            this.name = name.getValue();
        }
    }

    public static class Machine extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger companyId;

        public Machine(BigInteger id, String name, String description, BigInteger companyId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(companyId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.companyId = companyId;
        }

        public Machine(Uint256 id, Utf8String name, Utf8String description, Uint256 companyId) {
            super(id,name,description,companyId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.companyId = companyId.getValue();
        }
    }

    public static class Measure extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String unitOfMeasure;

        public BigInteger measureStartTime;

        public BigInteger measureEndTime;

        public BigInteger phaseId;

        public BigInteger measureConstraintId;

        public Measure(BigInteger id, String name, String unitOfMeasure, BigInteger measureStartTime, BigInteger measureEndTime, BigInteger phaseId, BigInteger measureConstraintId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(unitOfMeasure),new org.web3j.abi.datatypes.generated.Uint256(measureStartTime),new org.web3j.abi.datatypes.generated.Uint256(measureEndTime),new org.web3j.abi.datatypes.generated.Uint256(phaseId),new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId));
            this.id = id;
            this.name = name;
            this.unitOfMeasure = unitOfMeasure;
            this.measureStartTime = measureStartTime;
            this.measureEndTime = measureEndTime;
            this.phaseId = phaseId;
            this.measureConstraintId = measureConstraintId;
        }

        public Measure(Uint256 id, Utf8String name, Utf8String unitOfMeasure, Uint256 measureStartTime, Uint256 measureEndTime, Uint256 phaseId, Uint256 measureConstraintId) {
            super(id,name,unitOfMeasure,measureStartTime,measureEndTime,phaseId,measureConstraintId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.unitOfMeasure = unitOfMeasure.getValue();
            this.measureStartTime = measureStartTime.getValue();
            this.measureEndTime = measureEndTime.getValue();
            this.phaseId = phaseId.getValue();
            this.measureConstraintId = measureConstraintId.getValue();
        }
    }

    public static class MeasureConstraint extends DynamicStruct {
        public BigInteger id;

        public String name;

        public BigInteger maxMeasure;

        public BigInteger minMeasure;

        public String unitOfMeasure;

        public BigInteger recipeStepId;

        public BigInteger machineId;

        public MeasureConstraint(BigInteger id, String name, BigInteger maxMeasure, BigInteger minMeasure, String unitOfMeasure, BigInteger recipeStepId, BigInteger machineId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.generated.Int256(maxMeasure),new org.web3j.abi.datatypes.generated.Int256(minMeasure),new org.web3j.abi.datatypes.Utf8String(unitOfMeasure),new org.web3j.abi.datatypes.generated.Uint256(recipeStepId),new org.web3j.abi.datatypes.generated.Uint256(machineId));
            this.id = id;
            this.name = name;
            this.maxMeasure = maxMeasure;
            this.minMeasure = minMeasure;
            this.unitOfMeasure = unitOfMeasure;
            this.recipeStepId = recipeStepId;
            this.machineId = machineId;
        }

        public MeasureConstraint(Uint256 id, Utf8String name, Int256 maxMeasure, Int256 minMeasure, Utf8String unitOfMeasure, Uint256 recipeStepId, Uint256 machineId) {
            super(id,name,maxMeasure,minMeasure,unitOfMeasure,recipeStepId,machineId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.maxMeasure = maxMeasure.getValue();
            this.minMeasure = minMeasure.getValue();
            this.unitOfMeasure = unitOfMeasure.getValue();
            this.recipeStepId = recipeStepId.getValue();
            this.machineId = machineId.getValue();
        }
    }

    public static class Phase extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger productId;

        public BigInteger machineId;

        public BigInteger recipeStepId;

        public Phase(BigInteger id, String name, String description, BigInteger productId, BigInteger machineId, BigInteger recipeStepId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(productId),new org.web3j.abi.datatypes.generated.Uint256(machineId),new org.web3j.abi.datatypes.generated.Uint256(recipeStepId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.productId = productId;
            this.machineId = machineId;
            this.recipeStepId = recipeStepId;
        }

        public Phase(Uint256 id, Utf8String name, Utf8String description, Uint256 productId, Uint256 machineId, Uint256 recipeStepId) {
            super(id,name,description,productId,machineId,recipeStepId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.productId = productId.getValue();
            this.machineId = machineId.getValue();
            this.recipeStepId = recipeStepId.getValue();
        }
    }

    public static class Product extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger companyId;

        public BigInteger recipeId;

        public Product(BigInteger id, String name, String description, BigInteger companyId, BigInteger recipeId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(companyId),new org.web3j.abi.datatypes.generated.Uint256(recipeId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.companyId = companyId;
            this.recipeId = recipeId;
        }

        public Product(Uint256 id, Utf8String name, Utf8String description, Uint256 companyId, Uint256 recipeId) {
            super(id,name,description,companyId,recipeId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.companyId = companyId.getValue();
            this.recipeId = recipeId.getValue();
        }
    }

    public static class RecipeStep extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger recipeId;

        public BigInteger machineId;

        public RecipeStep(BigInteger id, String name, String description, BigInteger recipeId, BigInteger machineId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(recipeId),new org.web3j.abi.datatypes.generated.Uint256(machineId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.recipeId = recipeId;
            this.machineId = machineId;
        }

        public RecipeStep(Uint256 id, Utf8String name, Utf8String description, Uint256 recipeId, Uint256 machineId) {
            super(id,name,description,recipeId,machineId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.recipeId = recipeId.getValue();
            this.machineId = machineId.getValue();
        }
    }

    public static class Recipe extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger companyId;

        public Recipe(BigInteger id, String name, String description, BigInteger companyId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(companyId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.companyId = companyId;
        }

        public Recipe(Uint256 id, Utf8String name, Utf8String description, Uint256 companyId) {
            super(id,name,description,companyId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.companyId = companyId.getValue();
        }
    }

    public static class CompanyCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class MachineCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class MeasureConstraintCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class MeasureCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class PhaseCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class ProductCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class RecipeCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class RecipeStepCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }
}
