package org.ice.smart.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class ICESmartContract extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_ADDCOMPANY = "addCompany";

    public static final String FUNC_ADDMACHINE = "addMachine";

    public static final String FUNC_ADDMEASURE = "addMeasure";

    public static final String FUNC_ADDMEASURECONSTRAINT = "addMeasureConstraint";

    public static final String FUNC_ADDPHASE = "addPhase";

    public static final String FUNC_ADDPRODUCT = "addProduct";

    public static final String FUNC_ADDRECIPE = "addRecipe";

    public static final String FUNC_ADDRECIPESTEP = "addRecipeStep";

    public static final String FUNC_COMPANIES = "companies";

    public static final String FUNC_GETCOMPANYBYID = "getCompanyById";

    public static final String FUNC_GETMACHINEBYID = "getMachineById";

    public static final String FUNC_GETMACHINESBYCOMPANYID = "getMachinesByCompanyId";

    public static final String FUNC_GETMEASUREBYID = "getMeasureById";

    public static final String FUNC_GETMEASURECONSTRAINTBYID = "getMeasureConstraintById";

    public static final String FUNC_GETMEASURECONSTRAINTS = "getMeasureConstraints";

    public static final String FUNC_GETMEASURECONSTRAINTSBYRECIPESTEPID = "getMeasureConstraintsByRecipeStepId";

    public static final String FUNC_GETMEASURESBYMEASURECONSTRAINTID = "getMeasuresByMeasureConstraintId";

    public static final String FUNC_GETMEASURESBYPHASEID = "getMeasuresByPhaseId";

    public static final String FUNC_GETNUMOFMACHINESBYCOMPANYID = "getNumOfMachinesByCompanyId";

    public static final String FUNC_GETNUMOFMEASURECONSTRAINTBYRECIPESTEPID = "getNumOfMeasureConstraintByRecipeStepId";

    public static final String FUNC_GETNUMOFMEASURECONSTRAINTSBYMEASURECONSTRAINTID = "getNumOfMeasureConstraintsByMeasureConstraintId";

    public static final String FUNC_GETNUMOFMEASURESBYPHASEID = "getNumOfMeasuresByPhaseId";

    public static final String FUNC_GETNUMOFPHASESBYMACHINEID = "getNumOfPhasesByMachineId";

    public static final String FUNC_GETNUMOFPHASESBYPRODUCTID = "getNumOfPhasesByProductId";

    public static final String FUNC_GETNUMOFPHASESBYRECIPESTEPID = "getNumOfPhasesByRecipeStepId";

    public static final String FUNC_GETNUMOFRECIPESTEPSBYMACHINEID = "getNumOfRecipeStepsByMachineId";

    public static final String FUNC_GETNUMOFRECIPESTEPSBYRECIPEID = "getNumOfRecipeStepsByRecipeId";

    public static final String FUNC_GETNUMOFRECIPESBYCOMPANYID = "getNumOfRecipesByCompanyId";

    public static final String FUNC_GETPHASEBYID = "getPhaseById";

    public static final String FUNC_GETPHASESBYMACHINEID = "getPhasesByMachineId";

    public static final String FUNC_GETPHASESBYPRODUCTID = "getPhasesByProductId";

    public static final String FUNC_GETPHASESBYRECIPESTEPID = "getPhasesByRecipeStepId";

    public static final String FUNC_GETPRODUCTBYID = "getProductById";

    public static final String FUNC_GETPRODUCTSBYCOMPANYID = "getProductsByCompanyId";

    public static final String FUNC_GETPRODUCTSBYRECIPYID = "getProductsByRecipyId";

    public static final String FUNC_GETRECIPESTEPBYID = "getRecipeStepbyId";

    public static final String FUNC_GETRECIPESTEPSBYMACHINEID = "getRecipeStepsByMachineId";

    public static final String FUNC_GETRECIPESTEPSBYRECIPEID = "getRecipeStepsByRecipeId";

    public static final String FUNC_GETRECIPEBYID = "getRecipebyId";

    public static final String FUNC_GETRECIPESBYCOMPANYID = "getRecipesByCompanyId";

    public static final String FUNC_MACHINES = "machines";

    public static final String FUNC_MEASURECONSTRAINTS = "measureConstraints";

    public static final String FUNC_MEASURES = "measures";

    public static final String FUNC_PHASES = "phases";

    public static final String FUNC_PRODUCTS = "products";

    public static final String FUNC_RECIPESTEPS = "recipeSteps";

    public static final String FUNC_RECIPES = "recipes";

    public static final Event COMPANYCREATED_EVENT = new Event("CompanyCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MACHINECREATED_EVENT = new Event("MachineCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MEASURECONSTRAINTCREATED_EVENT = new Event("MeasureConstraintCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MEASURECREATED_EVENT = new Event("MeasureCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PHASECREATED_EVENT = new Event("PhaseCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PRODUCTCREATED_EVENT = new Event("ProductCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RECIPECREATED_EVENT = new Event("RecipeCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RECIPESTEPCREATED_EVENT = new Event("RecipeStepCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected ICESmartContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ICESmartContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ICESmartContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ICESmartContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<CompanyCreatedEventResponse> getCompanyCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(COMPANYCREATED_EVENT, transactionReceipt);
        ArrayList<CompanyCreatedEventResponse> responses = new ArrayList<CompanyCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CompanyCreatedEventResponse typedResponse = new CompanyCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CompanyCreatedEventResponse> companyCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CompanyCreatedEventResponse>() {
            @Override
            public CompanyCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(COMPANYCREATED_EVENT, log);
                CompanyCreatedEventResponse typedResponse = new CompanyCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CompanyCreatedEventResponse> companyCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(COMPANYCREATED_EVENT));
        return companyCreatedEventFlowable(filter);
    }

    public List<MachineCreatedEventResponse> getMachineCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MACHINECREATED_EVENT, transactionReceipt);
        ArrayList<MachineCreatedEventResponse> responses = new ArrayList<MachineCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MachineCreatedEventResponse typedResponse = new MachineCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MachineCreatedEventResponse> machineCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MachineCreatedEventResponse>() {
            @Override
            public MachineCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MACHINECREATED_EVENT, log);
                MachineCreatedEventResponse typedResponse = new MachineCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MachineCreatedEventResponse> machineCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MACHINECREATED_EVENT));
        return machineCreatedEventFlowable(filter);
    }

    public List<MeasureConstraintCreatedEventResponse> getMeasureConstraintCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MEASURECONSTRAINTCREATED_EVENT, transactionReceipt);
        ArrayList<MeasureConstraintCreatedEventResponse> responses = new ArrayList<MeasureConstraintCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MeasureConstraintCreatedEventResponse typedResponse = new MeasureConstraintCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MeasureConstraintCreatedEventResponse> measureConstraintCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MeasureConstraintCreatedEventResponse>() {
            @Override
            public MeasureConstraintCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MEASURECONSTRAINTCREATED_EVENT, log);
                MeasureConstraintCreatedEventResponse typedResponse = new MeasureConstraintCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MeasureConstraintCreatedEventResponse> measureConstraintCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MEASURECONSTRAINTCREATED_EVENT));
        return measureConstraintCreatedEventFlowable(filter);
    }

    public List<MeasureCreatedEventResponse> getMeasureCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MEASURECREATED_EVENT, transactionReceipt);
        ArrayList<MeasureCreatedEventResponse> responses = new ArrayList<MeasureCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MeasureCreatedEventResponse typedResponse = new MeasureCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MeasureCreatedEventResponse> measureCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MeasureCreatedEventResponse>() {
            @Override
            public MeasureCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MEASURECREATED_EVENT, log);
                MeasureCreatedEventResponse typedResponse = new MeasureCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MeasureCreatedEventResponse> measureCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MEASURECREATED_EVENT));
        return measureCreatedEventFlowable(filter);
    }

    public List<PhaseCreatedEventResponse> getPhaseCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PHASECREATED_EVENT, transactionReceipt);
        ArrayList<PhaseCreatedEventResponse> responses = new ArrayList<PhaseCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PhaseCreatedEventResponse typedResponse = new PhaseCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PhaseCreatedEventResponse> phaseCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PhaseCreatedEventResponse>() {
            @Override
            public PhaseCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PHASECREATED_EVENT, log);
                PhaseCreatedEventResponse typedResponse = new PhaseCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PhaseCreatedEventResponse> phaseCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PHASECREATED_EVENT));
        return phaseCreatedEventFlowable(filter);
    }

    public List<ProductCreatedEventResponse> getProductCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PRODUCTCREATED_EVENT, transactionReceipt);
        ArrayList<ProductCreatedEventResponse> responses = new ArrayList<ProductCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProductCreatedEventResponse typedResponse = new ProductCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProductCreatedEventResponse> productCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProductCreatedEventResponse>() {
            @Override
            public ProductCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PRODUCTCREATED_EVENT, log);
                ProductCreatedEventResponse typedResponse = new ProductCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProductCreatedEventResponse> productCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PRODUCTCREATED_EVENT));
        return productCreatedEventFlowable(filter);
    }

    public List<RecipeCreatedEventResponse> getRecipeCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECIPECREATED_EVENT, transactionReceipt);
        ArrayList<RecipeCreatedEventResponse> responses = new ArrayList<RecipeCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RecipeCreatedEventResponse typedResponse = new RecipeCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RecipeCreatedEventResponse> recipeCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RecipeCreatedEventResponse>() {
            @Override
            public RecipeCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECIPECREATED_EVENT, log);
                RecipeCreatedEventResponse typedResponse = new RecipeCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RecipeCreatedEventResponse> recipeCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECIPECREATED_EVENT));
        return recipeCreatedEventFlowable(filter);
    }

    public List<RecipeStepCreatedEventResponse> getRecipeStepCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECIPESTEPCREATED_EVENT, transactionReceipt);
        ArrayList<RecipeStepCreatedEventResponse> responses = new ArrayList<RecipeStepCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RecipeStepCreatedEventResponse typedResponse = new RecipeStepCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RecipeStepCreatedEventResponse> recipeStepCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RecipeStepCreatedEventResponse>() {
            @Override
            public RecipeStepCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECIPESTEPCREATED_EVENT, log);
                RecipeStepCreatedEventResponse typedResponse = new RecipeStepCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RecipeStepCreatedEventResponse> recipeStepCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECIPESTEPCREATED_EVENT));
        return recipeStepCreatedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addCompany(String name) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDCOMPANY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMachine(BigInteger companyId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMACHINE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMeasure(BigInteger phaseId, BigInteger measureConstraintId, String name, BigInteger measure, String unitOfMeasure, BigInteger measureStartTime, BigInteger measureEndTime) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEASURE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId), 
                new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.generated.Uint256(measure), 
                new org.web3j.abi.datatypes.Utf8String(unitOfMeasure), 
                new org.web3j.abi.datatypes.generated.Uint256(measureStartTime), 
                new org.web3j.abi.datatypes.generated.Uint256(measureEndTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMeasureConstraint(BigInteger recipeStepId, BigInteger machineId, String name, BigInteger maxMeasure, BigInteger minMeasure, String unitOfMeasure) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEASURECONSTRAINT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId), 
                new org.web3j.abi.datatypes.generated.Uint256(machineId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.generated.Int256(maxMeasure), 
                new org.web3j.abi.datatypes.generated.Int256(minMeasure), 
                new org.web3j.abi.datatypes.Utf8String(unitOfMeasure)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addPhase(BigInteger productId, BigInteger machineId, BigInteger recipeStepId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDPHASE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId), 
                new org.web3j.abi.datatypes.generated.Uint256(machineId), 
                new org.web3j.abi.datatypes.generated.Uint256(recipeStepId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addProduct(BigInteger companyId, BigInteger recipyId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDPRODUCT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId), 
                new org.web3j.abi.datatypes.generated.Uint256(recipyId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRecipe(BigInteger companyId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDRECIPE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRecipeStep(BigInteger recipeId, BigInteger machineId, String name, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDRECIPESTEP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId), 
                new org.web3j.abi.datatypes.generated.Uint256(machineId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple2<BigInteger, String>> companies(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_COMPANIES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple2<BigInteger, String>>(function,
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Company> getCompanyById(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMPANYBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Company>() {}));
        return executeRemoteCallSingleValueReturn(function, Company.class);
    }

    public RemoteFunctionCall<Machine> getMachineById(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMACHINEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Machine>() {}));
        return executeRemoteCallSingleValueReturn(function, Machine.class);
    }

    public RemoteFunctionCall<List> getMachinesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMACHINESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Machine>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Measure> getMeasureById(BigInteger measureId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASUREBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Measure>() {}));
        return executeRemoteCallSingleValueReturn(function, Measure.class);
    }

    public RemoteFunctionCall<MeasureConstraint> getMeasureConstraintById(BigInteger measureConstraintId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURECONSTRAINTBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<MeasureConstraint>() {}));
        return executeRemoteCallSingleValueReturn(function, MeasureConstraint.class);
    }

    public RemoteFunctionCall<List> getMeasureConstraints() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURECONSTRAINTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<MeasureConstraint>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMeasureConstraintsByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURECONSTRAINTSBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<MeasureConstraint>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMeasuresByMeasureConstraintId(BigInteger measureConstraintId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURESBYMEASURECONSTRAINTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Measure>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMeasuresByPhaseId(BigInteger phaseId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEASURESBYPHASEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Measure>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getNumOfMachinesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMACHINESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfMeasureConstraintByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMEASURECONSTRAINTBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfMeasureConstraintsByMeasureConstraintId(BigInteger measureConstraintId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMEASURECONSTRAINTSBYMEASURECONSTRAINTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfMeasuresByPhaseId(BigInteger phaseId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFMEASURESBYPHASEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfPhasesByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFPHASESBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfPhasesByProductId(BigInteger productId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFPHASESBYPRODUCTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfPhasesByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFPHASESBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfRecipeStepsByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFRECIPESTEPSBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfRecipeStepsByRecipeId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFRECIPESTEPSBYRECIPEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getNumOfRecipesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETNUMOFRECIPESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Phase> getPhaseById(BigInteger phaseId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(phaseId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Phase>() {}));
        return executeRemoteCallSingleValueReturn(function, Phase.class);
    }

    public RemoteFunctionCall<List> getPhasesByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASESBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Phase>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getPhasesByProductId(BigInteger productId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASESBYPRODUCTID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Phase>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getPhasesByRecipeStepId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPHASESBYRECIPESTEPID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Phase>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Product> getProductById(BigInteger productId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRODUCTBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(productId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Product>() {}));
        return executeRemoteCallSingleValueReturn(function, Product.class);
    }

    public RemoteFunctionCall<List> getProductsByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRODUCTSBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Product>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getProductsByRecipyId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRODUCTSBYRECIPYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Product>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<RecipeStep> getRecipeStepbyId(BigInteger recipeStepId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESTEPBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeStepId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<RecipeStep>() {}));
        return executeRemoteCallSingleValueReturn(function, RecipeStep.class);
    }

    public RemoteFunctionCall<List> getRecipeStepsByMachineId(BigInteger machineId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESTEPSBYMACHINEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(machineId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<RecipeStep>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getRecipeStepsByRecipeId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESTEPSBYRECIPEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<RecipeStep>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Recipe> getRecipebyId(BigInteger recipeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(recipeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Recipe>() {}));
        return executeRemoteCallSingleValueReturn(function, Recipe.class);
    }

    public RemoteFunctionCall<List> getRecipesByCompanyId(BigInteger companyId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECIPESBYCOMPANYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(companyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Recipe>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>> machines(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MACHINES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>>(function,
                new Callable<Tuple4<BigInteger, String, String, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>> measureConstraints(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MEASURECONSTRAINTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<BigInteger, String, BigInteger, BigInteger, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple8<BigInteger, String, BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger>> measures(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MEASURES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<BigInteger, String, BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple8<BigInteger, String, BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, String, BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, String, BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>> phases(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PHASES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<BigInteger, String, String, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>> products(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PRODUCTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<BigInteger, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, String, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>> recipeSteps(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RECIPESTEPS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<BigInteger, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<BigInteger, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, String, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>> recipes(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RECIPES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, String, String, BigInteger>>(function,
                new Callable<Tuple4<BigInteger, String, String, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    @Deprecated
    public static ICESmartContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ICESmartContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ICESmartContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ICESmartContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ICESmartContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ICESmartContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ICESmartContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ICESmartContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ICESmartContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ICESmartContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ICESmartContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ICESmartContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ICESmartContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Company extends DynamicStruct {
        public BigInteger id;

        public String name;

        public Company(BigInteger id, String name) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name));
            this.id = id;
            this.name = name;
        }

        public Company(Uint256 id, Utf8String name) {
            super(id,name);
            this.id = id.getValue();
            this.name = name.getValue();
        }
    }

    public static class Machine extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger companyId;

        public Machine(BigInteger id, String name, String description, BigInteger companyId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(companyId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.companyId = companyId;
        }

        public Machine(Uint256 id, Utf8String name, Utf8String description, Uint256 companyId) {
            super(id,name,description,companyId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.companyId = companyId.getValue();
        }
    }

    public static class Measure extends DynamicStruct {
        public BigInteger id;

        public String name;

        public BigInteger measure;

        public String unitOfMeasure;

        public BigInteger measureStartTime;

        public BigInteger measureEndTime;

        public BigInteger phaseId;

        public BigInteger measureConstraintId;

        public Measure(BigInteger id, String name, BigInteger measure, String unitOfMeasure, BigInteger measureStartTime, BigInteger measureEndTime, BigInteger phaseId, BigInteger measureConstraintId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.generated.Uint256(measure),new org.web3j.abi.datatypes.Utf8String(unitOfMeasure),new org.web3j.abi.datatypes.generated.Uint256(measureStartTime),new org.web3j.abi.datatypes.generated.Uint256(measureEndTime),new org.web3j.abi.datatypes.generated.Uint256(phaseId),new org.web3j.abi.datatypes.generated.Uint256(measureConstraintId));
            this.id = id;
            this.name = name;
            this.measure = measure;
            this.unitOfMeasure = unitOfMeasure;
            this.measureStartTime = measureStartTime;
            this.measureEndTime = measureEndTime;
            this.phaseId = phaseId;
            this.measureConstraintId = measureConstraintId;
        }

        public Measure(Uint256 id, Utf8String name, Uint256 measure, Utf8String unitOfMeasure, Uint256 measureStartTime, Uint256 measureEndTime, Uint256 phaseId, Uint256 measureConstraintId) {
            super(id,name,measure,unitOfMeasure,measureStartTime,measureEndTime,phaseId,measureConstraintId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.measure = measure.getValue();
            this.unitOfMeasure = unitOfMeasure.getValue();
            this.measureStartTime = measureStartTime.getValue();
            this.measureEndTime = measureEndTime.getValue();
            this.phaseId = phaseId.getValue();
            this.measureConstraintId = measureConstraintId.getValue();
        }
    }

    public static class MeasureConstraint extends DynamicStruct {
        public BigInteger id;

        public String name;

        public BigInteger maxMeasure;

        public BigInteger minMeasure;

        public String unitOfMeasure;

        public BigInteger recipeStepId;

        public BigInteger machineId;

        public MeasureConstraint(BigInteger id, String name, BigInteger maxMeasure, BigInteger minMeasure, String unitOfMeasure, BigInteger recipeStepId, BigInteger machineId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.generated.Int256(maxMeasure),new org.web3j.abi.datatypes.generated.Int256(minMeasure),new org.web3j.abi.datatypes.Utf8String(unitOfMeasure),new org.web3j.abi.datatypes.generated.Uint256(recipeStepId),new org.web3j.abi.datatypes.generated.Uint256(machineId));
            this.id = id;
            this.name = name;
            this.maxMeasure = maxMeasure;
            this.minMeasure = minMeasure;
            this.unitOfMeasure = unitOfMeasure;
            this.recipeStepId = recipeStepId;
            this.machineId = machineId;
        }

        public MeasureConstraint(Uint256 id, Utf8String name, Int256 maxMeasure, Int256 minMeasure, Utf8String unitOfMeasure, Uint256 recipeStepId, Uint256 machineId) {
            super(id,name,maxMeasure,minMeasure,unitOfMeasure,recipeStepId,machineId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.maxMeasure = maxMeasure.getValue();
            this.minMeasure = minMeasure.getValue();
            this.unitOfMeasure = unitOfMeasure.getValue();
            this.recipeStepId = recipeStepId.getValue();
            this.machineId = machineId.getValue();
        }
    }

    public static class Phase extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger productId;

        public BigInteger machineId;

        public BigInteger recipeStepId;

        public Phase(BigInteger id, String name, String description, BigInteger productId, BigInteger machineId, BigInteger recipeStepId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(productId),new org.web3j.abi.datatypes.generated.Uint256(machineId),new org.web3j.abi.datatypes.generated.Uint256(recipeStepId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.productId = productId;
            this.machineId = machineId;
            this.recipeStepId = recipeStepId;
        }

        public Phase(Uint256 id, Utf8String name, Utf8String description, Uint256 productId, Uint256 machineId, Uint256 recipeStepId) {
            super(id,name,description,productId,machineId,recipeStepId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.productId = productId.getValue();
            this.machineId = machineId.getValue();
            this.recipeStepId = recipeStepId.getValue();
        }
    }

    public static class Product extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger companyId;

        public BigInteger recipeId;

        public Product(BigInteger id, String name, String description, BigInteger companyId, BigInteger recipeId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(companyId),new org.web3j.abi.datatypes.generated.Uint256(recipeId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.companyId = companyId;
            this.recipeId = recipeId;
        }

        public Product(Uint256 id, Utf8String name, Utf8String description, Uint256 companyId, Uint256 recipeId) {
            super(id,name,description,companyId,recipeId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.companyId = companyId.getValue();
            this.recipeId = recipeId.getValue();
        }
    }

    public static class RecipeStep extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger recipeId;

        public BigInteger machineId;

        public RecipeStep(BigInteger id, String name, String description, BigInteger recipeId, BigInteger machineId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(recipeId),new org.web3j.abi.datatypes.generated.Uint256(machineId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.recipeId = recipeId;
            this.machineId = machineId;
        }

        public RecipeStep(Uint256 id, Utf8String name, Utf8String description, Uint256 recipeId, Uint256 machineId) {
            super(id,name,description,recipeId,machineId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.recipeId = recipeId.getValue();
            this.machineId = machineId.getValue();
        }
    }

    public static class Recipe extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String description;

        public BigInteger companyId;

        public Recipe(BigInteger id, String name, String description, BigInteger companyId) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id),new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(description),new org.web3j.abi.datatypes.generated.Uint256(companyId));
            this.id = id;
            this.name = name;
            this.description = description;
            this.companyId = companyId;
        }

        public Recipe(Uint256 id, Utf8String name, Utf8String description, Uint256 companyId) {
            super(id,name,description,companyId);
            this.id = id.getValue();
            this.name = name.getValue();
            this.description = description.getValue();
            this.companyId = companyId.getValue();
        }
    }

    public static class CompanyCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class MachineCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class MeasureConstraintCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class MeasureCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class PhaseCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class ProductCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class RecipeCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }

    public static class RecipeStepCreatedEventResponse extends BaseEventResponse {
        public BigInteger id;
    }
}
